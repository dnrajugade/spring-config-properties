configuration.projectName=Spring and Cloud
com.digitalriver.consumer.host.name=tpedevapp0067.d010.digitalriverws.net
com.digitalriver.consumer.virtual.host=gCArchitecture
com.digitalriver.consumer.username=gCArchitecture
com.digitalriver.consumer.password =password
#the name of the queue
com.digitalriver.consumer.queue.name=share.storm
#true if we are declaring a durable queue (the queue will survive a server restart)
com.digitalriver.consumer.queue.durable=true
#true if we are declaring an exclusive queue (restricted to this connection)
com.digitalriver.consumer.queue.exclusive=false
#true if we are declaring an auto delete queue (server will delete it when no longer in use)
com.digitalriver.consumer.queue.autoDelete=false
com.digitalriver.logging.oracle.connection.url=jdbc:oracle:thin:@dc2db45.dc2.digitalriver.com:1584:drhdev01
com.digitalriver.logging.oracle.connection.user=drajugade
com.digitalriver.logging.oracle.connection.password=password56#
com.digitalriver.logging.oracle.connection.maxActive=10
com.digitalriver.logging.oracle.connection.maxIdle=10
com.digitalriver.logging.oracle.connection.maxWaitInMillis=100
com.digitalriver.logging.oracle.connection.timeBetweenEvictionRunsMillis=0
com.digitalriver.logging.oracle.connection.numTestsPerEvictionRun=0
com.digitalriver.logging.oracle.connection.minEvictableIdleTimeMillis=10
com.digitalriver.logging.oracle.connection.maxActive=10


com.digitariver.consumer.writer=com.digitalriver.polar.database.writer.PolarRecordDBWriter
com.digitariver.consumer.mapper=com.digitalriver.messaging.mapper.RabbitBatchMessagerMapper
com.digitariver.consumer.message.processor=com.digitalriver.messaging.processor.MessageProcessorImpl
com.digitalriver.consumer.host.name=tpedevapp0067.d010.digitalriverws.net
com.digitalriver.consumer.virtual.host=gCArchitecture
com.digitalriver.consumer.username=gCArchitecture
com.digitalriver.consumer.password =password
#the name of the queue
com.digitalriver.consumer.queue.name=share.storm
#true if we are declaring a durable queue (the queue will survive a server restart)
com.digitalriver.consumer.queue.durable=true
#true if we are declaring an exclusive queue (restricted to this connection)
com.digitalriver.consumer.queue.exclusive=false
#true if we are declaring an auto delete queue (server will delete it when no longer in use)
com.digitalriver.consumer.queue.autoDelete=false

